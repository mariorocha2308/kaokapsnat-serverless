# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: chat-online-serverless
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:*
          Resource: 
            - arn:aws:dynamodb:us-east-1:575849731990:table/Users
            - arn:aws:dynamodb:us-east-1:575849731990:table/Messages

  environment:
    WSSAPIGATEWAYENDPOINT:
      Fn::Join:
        - ""
        - - Ref: WebsocketsApi
          - ".execute-api."
          - Ref: AWS::Region
          - ".amazonaws.com/${sls:stage}"

plugins:
  - serverless-offline

functions:
  register:
    handler: src/auth.register
    events:
      - http: 
          method: POST
          path: /auth/register
          cors: true
  login:
    handler: src/auth.login
    events:
      - http: 
          method: POST
          path: /auth/login
          cors: true
  user:
    handler: src/user.getUsers
    events:
      - http: 
          method: GET
          path: /getTotalUsers
          cors: true
  websocketHandler:
    handler: src/chat.handler
    events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: getMessages
      - websocket:
          route: sendMessage
      - websocket:
          route: getContacts

resources:
  Resources:
    Users:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Users
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
          - AttributeName: phone
            AttributeType: N
        KeySchema:
          - AttributeName: phone
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: NameIndex
            KeySchema:
              - AttributeName: name
                KeyType: HASH
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            Projection:
              ProjectionType: "ALL"
    Messages:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Messages
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: messageId
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: N
          - AttributeName: NameToName
            AttributeType: S
        KeySchema:
          - AttributeName: messageId
            KeyType: HASH
          - AttributeName: createdAt
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: NameToNameIndex
            KeySchema:
              - AttributeName: NameToName
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
            Projection:
              ProjectionType: "ALL"
